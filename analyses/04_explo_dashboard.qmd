---
title: "Exploration of odonates dataset"
author: "Dragon CESAB"
format:
  dashboard:
    orientation: columns
    embed-resources: true
---

# General exploration

```{r libraries}
library(plotly)
library(terra)
library(tmap)

library(collapse)
library(RColorBrewer)

library(here)

funcdir <- here("functions")
source(here(funcdir, "functions.R"))
```

```{r load}
tab <- readRDS(here("data", "derived-data", "occ_all_df.rds"))
rastat <- readRDS(here("data", "derived-data", "stat_10000.rds"))
# Change CRS
rastat <- project(rastat, crs("EPSG:3857"))

# interactive mode for tmap
suppressMessages(tmap_mode("view"))
```


## Column

### Row {.tabset}

```{r}
# Get colors for datasets
dsets <- sort(funique(tab$dbID))
ndat <- length(dsets)

dataset_color <- colorRampPalette(brewer.pal(8, "Dark2"))(ndat)
names(dataset_color) <- dsets

# Colors for countries
countries <- sort(funique(tab$country))
ncountries <- length(countries)

countries_color <- colorRampPalette(brewer.pal(8, "Dark2"))(ncountries)
names(countries_color) <- countries

# Colors for fam
fam <- sort(funique(tab$family))
nfam <- length(fam)

fam_color <- colorRampPalette(brewer.pal(8, "Dark2"))(nfam)
names(fam_color) <- fam
```

```{r obsyear}
#| title: obs
# number of observation per database
nobs_dbyear <- aggregate(tab$observationID, 
                         list(tab$dbID, tab$Year), nodup)
plot_ly(nobs_dbyear, x = ~Group.2, y = ~x, color = ~Group.1, 
        type = "scatter", mode = "lines+markers",
        colors = dataset_color) |> 
  layout(xaxis = list(title = 'Year'),
         yaxis = list(title = 'Number of observations'))
```

```{r gridyear}
#| title: cell
# number of cells per year per country
ngrid_countyear <- aggregate(tab$grid10kmID, list(tab$country, tab$Year), nodup)
plot_ly(ngrid_countyear, x = ~Group.2, y = ~x, color = ~Group.1,
        type = "scatter", mode = "lines+markers",
        colors = countries_color) |> 
    layout(xaxis = list(title = 'Year'),
           yaxis = list(title = 'Number of grid cells'))
```

```{r taxayear}
#| title: taxa
nspe_famyear <- aggregate(tab$species, list(tab$family, tab$Year), nodup)
plot_ly(nspe_famyear, x = ~Group.2, y = ~x, color = ~Group.1,
        type = "bar",
        colors = fam_color) |> 
        layout(xaxis = list(title = 'Year'),
           yaxis = list(title = 'Number of taxa'), 
           barmode = 'stack')
```


### Row {.tabset}

```{r heatdbspe}
#| title: taxa per db
# number of species per database per year
nspe_db_year <- tapply(tab$species, list(tab$dbID,tab$Year), nodup)
plot_ly(x = colnames(nspe_db_year), 
        y = rownames(nspe_db_year), 
        z = nspe_db_year, type = "heatmap") |>
    layout(margin = list(l = 120))
```

```{r heatgridspe}
#| title: cell per species
# number of observations per database per year
# nobs_db_year <- table(tab$dbID, tab$Year)
# nobs_db_year[nobs_db_year==0] <- NA
ngrid_sp_year <- tapply(tab$grid10kmID, list(tab$species,tab$Year), nodup)
plot_ly(x = colnames(ngrid_sp_year), 
        y = rownames(ngrid_sp_year), 
        z = ngrid_sp_year, type = "heatmap") |>
    layout(margin = list(l = 120))
```



## Column {.tabset}
```{r spemap}
#| title: spe
tm_shape(rastat) +
       tm_raster("nspe",
                 col.scale = tm_scale_continuous(),
                 options = opt_tm_raster(interpolate = FALSE),
                 group.control = "none",
                 col.legend = tm_legend(title = "Richness")) +
       tm_view(basemap.server = "OpenStreetMap",
              set_view = c(7, 55, 4))
```

```{r obsmap}
#| title: obs
tm_shape(rastat) +
       tm_raster("nobs", 
                 options = opt_tm_raster(interpolate = FALSE), 
                 group.control = "none",
                 col.legend = tm_legend(title = "# obs"),
                 col.scale = tm_scale_intervals(style = "log10_pretty")) +
       tm_view(basemap.server = "OpenStreetMap",
              set_view = c(7, 55, 4))
```

```{r yrmap}
#| title: year
tm_shape(rastat) +
       tm_raster("nyr", 
                 options = opt_tm_raster(interpolate = FALSE), 
                 group.control = "none",
                 col.legend = tm_legend(title = "# years"),
                 col.scale = tm_scale_continuous()) +
       tm_view(basemap.server = "OpenStreetMap",
              set_view = c(7, 55, 4))
```



# Species accumulation curves

```{r speciacc, include=FALSE, eval=FALSE}
# load data
load(here::here("data", "derived-data", "speacc_50.Rdata"))

seqx <- 2:100
# smooth the curve
lo <- loess(sa_all$Q0.5 ~ seqx)
fig <- plot_ly(x = seqx) 
fig <- fig |> 
       add_lines(y = predict(lo), name = "all", 
       line = list(color = 'rgb(0, 0, 0)', width = 2)) 

for (i in seq_along(sa_db)){
  li <- loess(sa_db[[i]]$Q0.5 ~ seqx)
  fig <- fig |> add_lines(y = predict(li), name = names(sa_db)[i]) 
}
fig |> layout(title = "Species accumulation curves", 
              xaxis = list(title = "Number of observations"),
              yaxis = list(title = "Number of species"))
```

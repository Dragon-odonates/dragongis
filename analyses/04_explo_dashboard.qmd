---
title: "Exploration of odonates dataset"
author: "Dragon CESAB"
format:
  dashboard:
    orientation: columns
    embed-resources: true
---

# General exploration

```{r libraries}
devtools::load_all()
# library(plotly)
# library(terra)
# library(tmap)

# library(collapse)
# library(RColorBrewer)

# library(here)
# source(here("R", "functions.R"))
```

```{r load}
tab <- readRDS(here("data", "derived-data", "occ_all_df.rds"))
rastat <- readRDS(here("data", "derived-data", "stat_10000.rds"))
# Change CRS
rastat <- project(rastat, crs("EPSG:3857"))

# interactive mode for tmap
tmap_mode("view") |> suppressMessages()
```


## Column

### Row {.tabset}

```{r}
# Get colors for datasets
dsets <- sort(funique(tab$dbID))
ndat <- length(dsets)

dataset_color <- colorRampPalette(brewer.pal(8, "Dark2"))(ndat)
names(dataset_color) <- dsets

# Colors for countries
countries <- sort(funique(tab$country))
ncountries <- length(countries)

countries_color <- colorRampPalette(brewer.pal(8, "Dark2"))(ncountries)
names(countries_color) <- countries

# Colors for fam
fam <- sort(funique(tab$family))
nfam <- length(fam)

fam_color <- colorRampPalette(brewer.pal(8, "Dark2"))(nfam)
names(fam_color) <- fam
```

```{r obsyear}
#| title: obs
# number of observation per database
nobs_dbyear <- aggregate(tab$observationID, list(tab$dbID, tab$Year), nodup)
plot_ly(
  nobs_dbyear,
  x = ~Group.2,
  y = ~x,
  color = ~Group.1,
  type = "scatter",
  mode = "lines+markers",
  colors = dataset_color
) |>
  layout(
    xaxis = list(title = 'Year'),
    yaxis = list(title = 'Number of observations')
  )
```

```{r gridyear}
#| title: cell
# number of cells per year per country
ngrid_countyear <- aggregate(tab$grid10kmID, list(tab$country, tab$Year), nodup)
plot_ly(
  ngrid_countyear,
  x = ~Group.2,
  y = ~x,
  color = ~Group.1,
  type = "scatter",
  mode = "lines+markers",
  colors = countries_color
) |>
  layout(
    xaxis = list(title = 'Year'),
    yaxis = list(title = 'Number of grid cells')
  )
```

```{r taxayear}
#| title: taxa
nspe_famyear <- aggregate(tab$species, list(tab$family, tab$Year), nodup)
plot_ly(
  nspe_famyear,
  x = ~Group.2,
  y = ~x,
  color = ~Group.1,
  type = "bar",
  colors = fam_color
) |>
  layout(
    xaxis = list(title = 'Year'),
    yaxis = list(title = 'Number of taxa'),
    barmode = 'stack'
  )
```


### Row {.tabset}

```{r heatdbspe}
#| title: taxa per db
# number of species per database per year
nspe_db_year <- tapply(tab$species, list(tab$dbID, tab$Year), nodup)
plot_ly(
  x = colnames(nspe_db_year),
  y = rownames(nspe_db_year),
  z = nspe_db_year,
  type = "heatmap"
) |>
  layout(margin = list(l = 120))
```

```{r heatgridspe}
#| title: cell per species
# number of cell per species per year
ngrid_sp_year <- tapply(tab$grid10kmID, list(tab$species, tab$Year), nodup)
# keep only most common species
# based on number of cell x years
totcell <- rowSums(ngrid_sp_year, na.rm = TRUE)
# keep the first quartile
ngrid_sp_year <- ngrid_sp_year[
  totcell > stats::quantile(totcell, probs = 0.75),
]
plot_ly(
  x = colnames(ngrid_sp_year),
  y = rownames(ngrid_sp_year),
  z = ngrid_sp_year,
  type = "heatmap"
) |>
  layout(margin = list(l = 120))
```



## Column {.tabset}
```{r spemap}
#| title: spe
tm_shape(rastat) +
  tm_raster(
    "nspe",
    col.scale = tm_scale_continuous(),
    options = opt_tm_raster(interpolate = FALSE),
    group.control = "none",
    col.legend = tm_legend(title = "Richness")
  ) +
  tm_view(basemap.server = "OpenStreetMap", set_view = c(7, 55, 4))
```

```{r obsmap}
#| title: obs
tm_shape(rastat) +
  tm_raster(
    "nobs",
    options = opt_tm_raster(interpolate = FALSE),
    group.control = "none",
    col.legend = tm_legend(title = "# obs"),
    col.scale = tm_scale_intervals(style = "log10_pretty")
  ) +
  tm_view(basemap.server = "OpenStreetMap", set_view = c(7, 55, 4))
```

```{r yrmap}
#| title: year
tm_shape(rastat) +
  tm_raster(
    "nyr",
    options = opt_tm_raster(interpolate = FALSE),
    group.control = "none",
    col.legend = tm_legend(title = "# years"),
    col.scale = tm_scale_continuous()
  ) +
  tm_view(basemap.server = "OpenStreetMap", set_view = c(7, 55, 4))
```

# About



The [**Dragon** project](https://www.fondationbiodiversite.fr/en/the-frb-in-action/programs-and-projects/le-cesab/dragon/) focuses on odonates (dragonflies and damselflies), a charismatic and important but often neglected taxonomic group that provides a unique opportunity to **study anthropogenic impacts on interface ecosystems linking terrestrial and freshwater environments**. The characteristics of this group make it a good candidate for the development of a new indicators to inform and support environmental management. The project aims to mobilise and use opportunistic and standardised data on odonates in Europe to obtain temporal trends of populations and species distributions at different spatial scales.  

The research project **Dragon** was selected from the [2022 FRB-MTE-OFB "Antropogenic pressures and impacts on terrestrial biodiversity](https://www.fondationbiodiversite.fr/en/calls/appel-a-projets-frb-mte-ofb-2022-impacts-sur-la-biodiversite-terrestre-dans-lanthropocene/).  


This is a beta version with non tested functionality and incomplete metadata. Source code is available on [Github](https://github.com/Dragon-odonates/dragongis)

<!-- badges: start -->
[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
![Lifecycle Experimental](https://img.shields.io/badge/Lifecycle-Experimental-339999)
<!-- badges: end -->
